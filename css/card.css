/* ==========================================
 * card.css - Estilos específicos para card.html (Versión Optimizada)
 * Proyecto: Super X Immersive Cards
========================================== */

/* =============================================
 * 1. ESTRUCTURA Y LAYOUT DE VISTAS
============================================= */

/* Clase para ocultar elementos de forma robusta */
.hidden {
  display: none !important;
}

/* Contenedor principal de la página */
#card_main {
  /* La estructura flex (column) de base.css es la clave aquí */
  justify-content: flex-start; /* Alinea el logo arriba */
  position: relative; /* Contexto de posicionamiento para las vistas */
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Logo superior */
#card_logo {
  width: clamp(250px, 75vw, 300px);
  height: auto;
  margin: 2vh 0;
  flex-shrink: 0; /* Evita que el logo se encoja */
  z-index: 100; /* Asegura que esté sobre las vistas si hay solapamiento */
  filter: var(--filter-gold-glow-soft);
  animation: logoGlow 3s ease-in-out infinite alternate;
}

@keyframes logoGlow {
  from { filter: var(--filter-gold-glow-soft); }
  to { filter: var(--filter-gold-glow-strong); }
}

/*
 * Contenedor genérico para las vistas.
 *
 * **CAMBIO CLAVE**: En lugar de ocultar cada vista individualmente,
 * las posicionaremos de forma absoluta para que ocupen el mismo espacio.
 * Esto evita saltos de layout y facilita las transiciones con fade.
 * La visibilidad se controlará con 'opacity' y 'pointer-events'.
*/
.view-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  
  /* Estado por defecto: invisible */
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
  transition: opacity 0.4s ease, visibility 0.4s ease;
}

/*
 * Clase 'active' para la vista que se debe mostrar.
 * El JS solo tendrá que mover esta clase de una vista a otra.
*/
.view-container.active {
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
  z-index: 10; /* Pone la vista activa por encima de las demás */
}


/* =============================================
 * 2. ESTILOS ESPECÍFICOS DE LAS VISTAS
 * (El contenido de las vistas ahora se centra usando flexbox)
============================================= */

/* --- 2.1 VISTA DE ERROR --- */
#card_view_error {
  justify-content: center; /* Centra el contenido verticalmente */
}

.card-error-overlay {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: clamp(1rem, 3vh, 1.5rem);
  max-width: 550px;
}

.card-error-icon svg {
  width: clamp(50px, 12vw, 80px);
  height: auto;
  color: var(--primary-gold);
  filter: var(--filter-gold-text);
  transition: transform 0.3s ease, filter 0.3s ease;
}

.card-error-icon:hover svg {
  transform: scale(1.1);
  filter: var(--filter-gold-glow-strong);
}

#card_error_title {
  font-size: clamp(1.4rem, 4.5vw, 2.2rem);
  color: var(--text-primary);
  text-shadow: var(--text-shadow-dark);
  line-height: 1.2;
}

#card_error_message {
  font-size: clamp(0.9rem, 3.2vw, 1.1rem);
  color: var(--text-muted);
  text-shadow: var(--text-shadow-medium);
  line-height: 1.5;
  opacity: 0.9;
}


/* --- 2.2 VISTA DE LOADING --- */
#card_view_loading {
  justify-content: center; /* Centra el contenido verticalmente */
}

.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
  max-width: 90vw;
}

.loading-spinner {
  position: relative;
  width: 50px;
  height: 50px;
}

.spinner-ring {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 3px solid transparent;
  border-top-color: var(--primary-gold);
  border-radius: 50%;
  animation: spinnerRotate 1.2s linear infinite;
}

.spinner-ring:nth-child(2) { animation-delay: -0.4s; border-top-color: var(--primary-gold-bright); }
.spinner-ring:nth-child(3) { animation-delay: -0.8s; border-top-color: var(--primary-gold-light); }

@keyframes spinnerRotate { to { transform: rotate(360deg); } }

.loading-message {
  font-size: clamp(1rem, 3.5vw, 1.3rem);
  color: var(--text-primary);
  text-shadow: var(--text-shadow-dark);
  font-weight: 500;
}

.loading-hint {
  font-size: clamp(0.8rem, 2.8vw, 1rem);
  color: var(--text-subtle);
  text-shadow: var(--text-shadow-medium);
  line-height: 1.4;
  max-width: 300px;
}

.loading-progress-container {
  width: clamp(250px, 80vw, 300px);
  height: 4px;
  background: var(--border-white-faint);
  border-radius: 2px;
  border: 1px solid var(--border-gold-faint);
  overflow: hidden;
}

.loading-progress-bar {
  width: 0%;
  height: 100%;
  background: var(--gradient-gold-horizontal);
  border-radius: 2px;
  transition: width 0.3s ease;
  box-shadow: var(--shadow-gold-glow);
}


/* --- 2.3 VISTA DEL MODELO 3D --- */
#card_view_model {
  padding: 0;
  /* El logo ocupa su espacio, el resto se distribuye con flexbox */
  justify-content: flex-start;
}

/* Contenedor que agrupa todo excepto el logo para centrarlo bajo él */
.model-content-wrapper {
  flex-grow: 1;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

#card_viewer {
  width: 100%;
  flex-grow: 1; /* El visor 3D toma todo el espacio central disponible */
  background: transparent;
  transition: filter 0.3s ease;
}

#card_viewer.hold {
  filter: blur(4px) brightness(1.2);
}

.hold-indicator-area {
  width: 100%;
  height: 2vh;
  min-height: 15px; /* Altura mínima para que no desaparezca */
  flex-shrink: 0;
  position: relative;
}

#card_hold_indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 0;
  height: 4px;
  background: var(--gradient-gold-horizontal);
  border-radius: 2px;
  z-index: 501;
  box-shadow: var(--shadow-gold-intense);
  transition: width 0.2s linear;
}

.info-box {
  width: 100%;
  padding: clamp(0.8rem, 2vh, 1.2rem) 1rem;
  background: var(--bg-glass);
  backdrop-filter: var(--backdrop-blur);
  border-top: 1px solid var(--border-white-faint);
  flex-shrink: 0;
  text-align: center;
}

#card_title {
  font-size: clamp(1.2rem, 4vw, 1.6rem);
  margin-bottom: 0.3rem;
  color: var(--text-primary);
  text-shadow: var(--text-shadow-dark);
}

#card_instructions {
  font-size: clamp(0.9rem, 3vw, 1rem);
  color: var(--text-secondary);
  text-shadow: var(--text-shadow-medium);
}

.share-button {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 500;
}

.share-button svg { transition: transform 0.2s ease; }
.share-button:hover svg { transform: rotate(15deg) scale(1.1); }


/* --- 2.4 VISTA DE VIDEO --- */
/*
 * **CAMBIO CLAVE**: La vista de video ahora es un 'view-container' más.
 * Ya no necesita 'position: fixed', heredando el posicionamiento absoluto
 * y las transiciones de opacidad. Esto unifica el comportamiento.
*/
#card_view_video {
  background-color: #000;
  justify-content: center;
  z-index: 1000; /* Se asegura que el video se muestre por encima de todo cuando esté activo */
}

#card_video {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.skip-button {
  position: absolute;
  bottom: clamp(1rem, 4vh, 2rem);
  right: clamp(1rem, 4vw, 2rem);
  z-index: 1001; /* Encima del video */
}


/* =============================================
 * 3. ELEMENTOS GLOBALES Y ANIMACIONES
============================================= */

/* Bloqueador de interacción para el evento "hold" */
#interaction_blocker {
  position: fixed;
  inset: 0;
  z-index: 450;
}

/* El 'fade-effect' puede ser usado por JS para transiciones manuales si es necesario */
#card_fade_effect {
    position: fixed;
    inset: 0;
    background-color: #000;
    z-index: 9999;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.5s ease-in-out;
}

#card_fade_effect.active {
    opacity: 1;
    pointer-events: all;
}

/* No se necesitan las animaciones 'fadeIn', ya que la transición de opacidad de .view-container lo maneja */


/* =============================================
 * 4. RESPONSIVE DESIGN (Sin cambios, ya estaba bien)
============================================= */
@media (max-width: 480px) {
  .view-container { padding: 0.8rem; }
  #card_view_model { padding: 0; }
  #card_logo { margin: 1.5vh 0; }
  .share-button { padding: 0.6rem 0.9rem; font-size: 0.8rem; }
}

@media (orientation: landscape) and (max-height: 500px) {
  #card_logo { display: none; }
  .share-button { top: 0.5rem; right: 0.5rem; }
}
